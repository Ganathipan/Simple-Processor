$date
	Wed Jul  9 08:36:54 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var reg 1 " CLK $end
$var reg 32 # INSTRUCTION [31:0] $end
$var reg 1 $ RESET $end
$var integer 32 % i [31:0] $end
$scope module mysystem $end
$var wire 1 " CLK $end
$var wire 32 & INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 1 ' WRITE_DATA_MEM2CAC $end
$var wire 1 ( READ_DATA_MEM2CAC $end
$var wire 32 ) PC_OUT [31:0] $end
$var wire 32 * OUTDATA_MEM2CAC [31:0] $end
$var wire 6 + MEM_ADDRESS_MEM2CAC [5:0] $end
$var wire 32 , INDATA_MEM2CAC [31:0] $end
$var wire 1 - BUSYWAIT_MEM2CAC $end
$scope module u_cpu $end
$var wire 1 " CLK $end
$var wire 32 . INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 1 / ZERO_FLAG $end
$var wire 1 ' WRITE_DATA_MEM2CAC $end
$var wire 1 0 WRITE_DATA_MEM $end
$var wire 1 1 SIGN_CONTROL $end
$var wire 1 2 REG_WRITE_ENABLE $end
$var wire 8 3 READ_MEM_OUT [7:0] $end
$var wire 1 ( READ_DATA_MEM2CAC $end
$var wire 1 4 READ_DATA_MEM $end
$var wire 32 5 PC_OUT [31:0] $end
$var wire 32 6 PC_IN [31:0] $end
$var wire 32 7 OUTDATA_MEM2CAC [31:0] $end
$var wire 1 8 OPERAND_CONTROL $end
$var wire 8 9 OPERAND2 [7:0] $end
$var wire 8 : OPERAND1 [7:0] $end
$var wire 6 ; MEM_ADDRESS_MEM2CAC [5:0] $end
$var wire 1 < JUMP_CONTROL $end
$var wire 32 = INDATA_MEM2CAC [31:0] $end
$var wire 1 - BUSYWAIT_MEM2CAC $end
$var wire 1 > BUSYWAIT $end
$var wire 2 ? BRANCH_CONTROL [1:0] $end
$var wire 8 @ ALURESULT [7:0] $end
$var wire 3 A ALUOP [2:0] $end
$var reg 8 B ALU_IN_DATA1 [7:0] $end
$var reg 8 C ALU_IN_DATA2 [7:0] $end
$var reg 8 D REG_INDATA [7:0] $end
$scope module u_alu $end
$var wire 8 E DATA1 [7:0] $end
$var wire 8 F DATA2 [7:0] $end
$var wire 8 G sum [7:0] $end
$var wire 8 H shiftOut [7:0] $end
$var wire 8 I orOut [7:0] $end
$var wire 8 J mulOut [7:0] $end
$var wire 8 K fwdOut [7:0] $end
$var wire 8 L andOut [7:0] $end
$var wire 1 M SHIFT_E $end
$var wire 1 N MUL_E $end
$var wire 3 O ALUOP [2:0] $end
$var reg 8 P RESULT [7:0] $end
$var reg 1 / ZERO $end
$scope module u0 $end
$var wire 8 Q DATA2 [7:0] $end
$var wire 8 R RESULT [7:0] $end
$upscope $end
$scope module u1 $end
$var wire 8 S DATA1 [7:0] $end
$var wire 8 T DATA2 [7:0] $end
$var wire 8 U RESULT [7:0] $end
$upscope $end
$scope module u3 $end
$var wire 8 V DATA1 [7:0] $end
$var wire 8 W DATA2 [7:0] $end
$var wire 8 X RESULT [7:0] $end
$upscope $end
$scope module u4 $end
$var wire 8 Y DATA1 [7:0] $end
$var wire 8 Z DATA2 [7:0] $end
$var wire 8 [ RESULT [7:0] $end
$upscope $end
$scope module u5 $end
$var wire 8 \ DATA1 [7:0] $end
$var wire 8 ] DATA2 [7:0] $end
$var wire 1 N ENABLE $end
$var reg 8 ^ RESULT [7:0] $end
$var reg 16 _ temp1 [15:0] $end
$var reg 16 ` temp2 [15:0] $end
$var integer 32 a i [31:0] $end
$upscope $end
$scope module u6 $end
$var wire 8 b DATA1 [7:0] $end
$var wire 8 c DATA2 [7:0] $end
$var wire 1 M ENABLE $end
$var reg 8 d RESULT [7:0] $end
$var reg 1 e sign $end
$var integer 32 f i [31:0] $end
$upscope $end
$upscope $end
$scope module u_control $end
$var wire 8 g OPCODE [7:0] $end
$var reg 3 h ALUOP [2:0] $end
$var reg 2 i BRANCH_CONTROL [1:0] $end
$var reg 1 < JUMP_CONTROL $end
$var reg 1 8 OPERAND_CONTROL $end
$var reg 1 4 READ_DATA_MEM $end
$var reg 1 1 SIGN_CONTROL $end
$var reg 1 0 WRITE_DATA_MEM $end
$var reg 1 2 WRITE_ENABLE $end
$upscope $end
$scope module u_data_cache $end
$var wire 8 j address [7:0] $end
$var wire 1 " clk $end
$var wire 1 4 read $end
$var wire 1 $ reset $end
$var wire 1 0 write $end
$var wire 8 k writedata [7:0] $end
$var wire 32 l mem_readdata [31:0] $end
$var wire 1 - mem_busywait $end
$var reg 3 m addr_index [2:0] $end
$var reg 2 n addr_offset [1:0] $end
$var reg 3 o addr_tag [2:0] $end
$var reg 1 > busywait $end
$var reg 1 p dirty $end
$var reg 1 q hit $end
$var reg 6 r mem_address [5:0] $end
$var reg 1 ( mem_read $end
$var reg 1 ' mem_write $end
$var reg 32 s mem_writedata [31:0] $end
$var reg 1 t miss $end
$var reg 8 u readdata [7:0] $end
$var reg 3 v state [2:0] $end
$var reg 1 w valid $end
$var integer 32 x i [31:0] $end
$upscope $end
$scope module u_pc $end
$var wire 1 " CLK $end
$var wire 1 $ RESET $end
$var wire 32 y PC_IN [31:0] $end
$var reg 32 z PC_OUT [31:0] $end
$upscope $end
$scope module u_pcIn $end
$var wire 2 { BRANCH [1:0] $end
$var wire 8 | BRANCH_ADDRESS [7:0] $end
$var wire 1 > BUSYWAIT $end
$var wire 1 < JUMP $end
$var wire 32 } PC_IN [31:0] $end
$var wire 1 / ZERO $end
$var reg 32 ~ PC [31:0] $end
$var reg 32 !" PC_OUT [31:0] $end
$var reg 32 "" offset [31:0] $end
$upscope $end
$scope module u_regfile $end
$var wire 1 " CLK $end
$var wire 3 #" INADDRESS [2:0] $end
$var wire 8 $" INDATA [7:0] $end
$var wire 3 %" OUT1ADDRESS [2:0] $end
$var wire 3 &" OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 2 WRITE $end
$var reg 8 '" OUT1DATA [7:0] $end
$var reg 8 (" OUT2DATA [7:0] $end
$var integer 32 )" counter [31:0] $end
$upscope $end
$upscope $end
$scope module u_data_mem $end
$var wire 6 *" address [5:0] $end
$var wire 1 " clock $end
$var wire 1 ( read $end
$var wire 1 $ reset $end
$var wire 1 ' write $end
$var wire 32 +" writedata [31:0] $end
$var reg 1 - busywait $end
$var reg 1 ," readaccess $end
$var reg 32 -" readdata [31:0] $end
$var reg 1 ." writeaccess $end
$var integer 32 /" i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_cpu $end
$scope module u_regfile $end
$var reg 8 0" \reg_array[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_cpu $end
$scope module u_regfile $end
$var reg 8 1" \reg_array[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_cpu $end
$scope module u_regfile $end
$var reg 8 2" \reg_array[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_cpu $end
$scope module u_regfile $end
$var reg 8 3" \reg_array[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_cpu $end
$scope module u_regfile $end
$var reg 8 4" \reg_array[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_cpu $end
$scope module u_regfile $end
$var reg 8 5" \reg_array[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_cpu $end
$scope module u_regfile $end
$var reg 8 6" \reg_array[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_cpu $end
$scope module u_regfile $end
$var reg 8 7" \reg_array[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_cpu $end
$scope module u_data_cache $end
$var reg 32 8" \data_blocks[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_cpu $end
$scope module u_data_cache $end
$var reg 32 9" \data_blocks[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_cpu $end
$scope module u_data_cache $end
$var reg 32 :" \data_blocks[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_cpu $end
$scope module u_data_cache $end
$var reg 32 ;" \data_blocks[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_cpu $end
$scope module u_data_cache $end
$var reg 32 <" \data_blocks[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_cpu $end
$scope module u_data_cache $end
$var reg 32 =" \data_blocks[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_cpu $end
$scope module u_data_cache $end
$var reg 32 >" \data_blocks[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_cpu $end
$scope module u_data_cache $end
$var reg 32 ?" \data_blocks[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_data_mem $end
$var reg 8 @" \memory_array[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_data_mem $end
$var reg 8 A" \memory_array[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_data_mem $end
$var reg 8 B" \memory_array[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_data_mem $end
$var reg 8 C" \memory_array[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_data_mem $end
$var reg 8 D" \memory_array[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_data_mem $end
$var reg 8 E" \memory_array[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_data_mem $end
$var reg 8 F" \memory_array[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mysystem $end
$scope module u_data_mem $end
$var reg 8 G" \memory_array[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
b100000000 /"
0."
bx -"
0,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
b0 $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
b1000 x
xw
b0 v
b0 u
xt
bx s
bx r
xq
xp
b0 o
b0 n
b0 m
bx l
bx k
b0 j
bx i
bx h
bx g
bx f
xe
b0 d
bx c
bx b
b1000 a
bx00000000 `
b0 _
b0 ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
b0 P
bx O
xN
xM
bx L
bx K
b0 J
bx I
b0 H
bx G
bx F
bx E
b0 D
bx C
bx B
bx A
b0 @
bx ?
x>
bx =
x<
bx ;
bx :
bx 9
x8
bx 7
bx 6
bx 5
x4
b0 3
x2
x1
x0
x/
bx .
0-
bx ,
bx +
bx *
bx )
0(
0'
bx &
b0 %
1$
bx #
0"
bx !
$end
#1
b0 !
b0 )
b0 5
b0 z
b0 }
0p
0w
#2
b100 ~
1t
0q
#3
bx J
bx ^
bx _
b1000 a
bx00000000 `
0>
b1001 C
b1001 F
b1001 Q
b1001 T
b1001 W
b1001 Z
b1001 ]
b1001 c
b100 6
b100 y
b100 !"
04
00
12
18
01
0<
b0 ?
b0 i
b0 {
b0 |
b0 g
b0 #"
b0 %"
b1 &"
b1001000000000000000000000000 #
b1001000000000000000000000000 &
b1001000000000000000000000000 .
#4
b1 n
b10 m
b0 J
b0 ^
b1000 a
bx00000000 `
bx _
b1001 D
b1001 $"
0N
0M
b1001 @
b1001 P
b1001 j
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 A
b0 O
b0 h
b1000 x
b1000 )"
b0x00x L
b0x00x X
bx1xx1 I
bx1xx1 [
b1001 K
b1001 R
1"
#5
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b100 ""
#7
b1000 a
b0 `
b0 _
b0 B
b0 E
b0 S
b0 V
b0 Y
b0 \
b0 b
b0 9
b0 ("
b0 :
b0 k
b0 '"
#8
b0 L
b0 X
b1001 I
b1001 [
0"
#9
0/
b1001 G
b1001 U
#10
0$
#12
1"
#13
b100 !
b100 )
b100 5
b100 z
b100 }
b1001 0"
#14
b1000 6
b1000 y
b1000 !"
b1000 ~
#15
b1001 _
b1000 a
b100100000000 `
b1 |
b1 #"
b1 C
b1 F
b1 Q
b1 T
b1 W
b1 Z
b1 ]
b1 c
b1001 B
b1001 E
b1001 S
b1001 V
b1001 Y
b1001 \
b1001 b
b1000000000000000100000000 #
b1000000000000000100000000 &
b1000000000000000100000000 .
b1001 :
b1001 k
b1001 '"
#16
b0 m
b1000 ""
b1 D
b1 $"
b1 @
b1 P
b1 j
b1 L
b1 X
b1 K
b1 R
0"
#17
b1100 ""
b1010 G
b1010 U
#20
b1 %
1"
#21
b1000 !
b1000 )
b1000 5
b1000 z
b1000 }
b1 1"
#22
b1100 6
b1100 y
b1100 !"
b1100 ~
#23
b1000 6
b1000 y
b1000 !"
1>
10
02
08
b0 |
b1010 g
b0 #"
b1000000000000000000001010 #
b1000000000000000000001010 &
b1000000000000000000001010 .
b1 9
b1 ("
#24
b10000 ""
0"
#25
b1100 ""
#28
1,"
1-
b11 v
b0 +
b0 ;
b0 r
b0 *"
1(
b10 %
1"
#32
0"
#36
b11 %
1"
#40
0"
#44
b100 %
1"
#48
0"
#52
b101 %
1"
#56
0"
#60
b110 %
1"
#64
0"
#68
b111 %
1"
#72
0"
#76
b1000 %
1"
bx00000000 ,
bx00000000 =
bx00000000 l
bx00000000 -"
#80
0"
#84
b1001 %
1"
#88
0"
#92
b1010 %
1"
#96
0"
#100
b1011 %
1"
#104
0"
#108
b1100 %
1"
#112
0"
#116
b1101 %
1"
bx0000000000000000 ,
bx0000000000000000 =
bx0000000000000000 l
bx0000000000000000 -"
#120
0"
#124
b1110 %
1"
#128
0"
#132
b1111 %
1"
#136
0"
#140
b10000 %
1"
#144
0"
#148
b10001 %
1"
#152
0"
#156
b10010 %
1"
bx000000000000000000000000 ,
bx000000000000000000000000 =
bx000000000000000000000000 l
bx000000000000000000000000 -"
#160
0"
#164
b10011 %
1"
#168
0"
#172
b10100 %
1"
#176
0"
#180
b10101 %
1"
#184
0"
#188
b10110 %
1"
#192
0"
#196
b0 v
b0 8"
0(
b10111 %
1"
0,"
0-
b0 ,
b0 =
b0 l
b0 -"
#197
1w
#198
0t
1q
#200
0"
#204
b1000 6
b1000 y
b1000 !"
b100100000000 8"
1>
b11000 %
1"
#205
1p
#208
0"
#212
b1100 6
b1100 y
b1100 !"
b100100000000 8"
0>
b11001 %
1"
#216
0"
#220
b100100000000 8"
b11010 %
1"
#221
b1100 !
b1100 )
b1100 5
b1100 z
b1100 }
#222
b10000 6
b10000 y
b10000 !"
b10000 ~
#223
b1000 a
b100100000000 `
b0 _
b0 C
b0 F
b0 Q
b0 T
b0 W
b0 Z
b0 ]
b0 c
18
b1 |
b1011 g
b1 #"
b1 %"
b0 &"
b10000000100001011 #
b10000000100001011 &
b10000000100001011 .
#224
b0 n
b10000 ""
b0 D
b0 $"
b0 @
b0 P
b0 j
b0 L
b0 X
b0 K
b0 R
0"
#225
b1000 a
b100000000 `
b1 B
b1 E
b1 S
b1 V
b1 Y
b1 \
b1 b
b10100 ""
b1001 9
b1001 ("
b1 :
b1 k
b1 '"
b1001 G
b1001 U
#226
b1 I
b1 [
#227
b1 G
b1 U
#228
b100100000001 8"
b11011 %
1"
#229
b10000 !
b10000 )
b10000 5
b10000 z
b10000 }
#230
b10100 6
b10100 y
b10100 !"
b10100 ~
#231
b10000 6
b10000 y
b10000 !"
1>
b1001 _
b1000 a
b100000000 `
14
00
12
08
b1001 C
b1001 F
b1001 Q
b1001 T
b1001 W
b1001 Z
b1001 ]
b1001 c
b10 |
b1000 g
b10 #"
b0 %"
b1 &"
b1000000000000001000001000 #
b1000000000000001000001000 &
b1000000000000001000001000 .
#232
b1 n
b10 m
b11000 ""
b10100 6
b10100 y
b10100 !"
b1 D
b1 $"
b1001 @
b1001 P
b1001 j
b1001 I
b1001 [
0>
b1 3
b1 u
b1 L
b1 X
b1001 K
b1001 R
0"
#233
b1000 a
b100100000000 `
b1001 _
b1 C
b1 F
b1 Q
b1 T
b1 W
b1 Z
b1 ]
b1 c
b1001 B
b1001 E
b1001 S
b1001 V
b1001 Y
b1001 \
b1001 b
b11100 ""
b1 9
b1 ("
b1001 :
b1001 k
b1001 '"
b0 D
b0 $"
b0 3
b0 u
b1010 G
b1010 U
#234
b10000 6
b10000 y
b10000 !"
1>
b0 m
b1 @
b1 P
b1 j
b1 K
b1 R
#235
b10100 6
b10100 y
b10100 !"
b1001 D
b1001 $"
0>
b1001 3
b1001 u
#236
b11100 %
1"
#237
b10100 !
b10100 )
b10100 5
b10100 z
b10100 }
b1001 2"
#238
b11000 6
b11000 y
b11000 !"
b11000 ~
#239
b11 |
b11 #"
b1000000000000001100001000 #
b1000000000000001100001000 &
b1000000000000001100001000 .
#240
b100000 ""
0"
#241
b100100 ""
#244
b11101 %
1"
#245
b11000 !
b11000 )
b11000 5
b11000 z
b11000 }
b1001 3"
#246
b11100 6
b11100 y
b11100 !"
b11100 ~
#247
b1 D
b1 $"
04
11
b100 |
b11 g
b100 #"
b1000000000000010000000011 #
b1000000000000010000000011 &
b1000000000000010000000011 .
#248
b10 n
b10 m
b1010 D
b1010 $"
b1010 @
b1010 P
b1010 j
b1 A
b1 O
b1 h
b101000 ""
0"
#249
b1000 a
b100100000000 `
b100011110111 _
b11111111 C
b11111111 F
b11111111 Q
b11111111 T
b11111111 W
b11111111 Z
b11111111 ]
b11111111 c
b101100 ""
#250
b1001 L
b1001 X
b11111111 I
b11111111 [
b11111111 K
b11111111 R
#251
b0 n
b1000 D
b1000 $"
b1000 @
b1000 P
b1000 j
b1000 G
b1000 U
#252
b11110 %
1"
#253
b11100 !
b11100 )
b11100 5
b11100 z
b11100 }
b1000 4"
#254
b100000 6
b100000 y
b100000 !"
b100000 ~
#255
b11100 6
b11100 y
b11100 !"
b1000 a
b100100000000 `
b111111 _
1>
b111 C
b111 F
b111 Q
b111 T
b111 W
b111 Z
b111 ]
b111 c
10
02
18
01
b1011 g
b100 %"
b111 &"
b111000001000000010000001011 #
b111000001000000010000001011 &
b111000001000000010000001011 .
#256
b11 n
b1 m
b111 D
b111 $"
b111 @
b111 P
b111 j
b0 A
b0 O
b0 h
b110000 ""
b1 L
b1 X
b1111 I
b1111 [
0p
0w
b111 K
b111 R
0"
#257
b1000 B
b1000 E
b1000 S
b1000 V
b1000 Y
b1000 \
b1000 b
b1000 a
b100000000000 `
b111000 _
b0 9
b0 ("
b1000 :
b1000 k
b1000 '"
b111 C
b111 F
b111 Q
b111 T
b111 W
b111 Z
b111 ]
b111 c
1t
0q
b10000 G
b10000 U
#258
b0 L
b0 X
#259
b1111 G
b1111 U
#260
1,"
1-
b11 v
b1 +
b1 ;
b1 r
b1 *"
1(
b11111 %
1"
#264
0"
#268
b100000 %
1"
#272
0"
#276
b100001 %
1"
#280
0"
#284
b100010 %
1"
#288
0"
#292
b100011 %
1"
#296
0"
#300
b100100 %
1"
#304
0"
#308
b100101 %
1"
#312
0"
#316
b100110 %
1"
#320
0"
#324
b100111 %
1"
#328
0"
#332
b101000 %
1"
#336
0"
#340
b101001 %
1"
#344
0"
#348
b101010 %
1"
#352
0"
#356
b101011 %
1"
#360
0"
#364
b101100 %
1"
#368
0"
#372
b101101 %
1"
#376
0"
#380
b101110 %
1"
#384
0"
#388
b101111 %
1"
#392
0"
#396
b110000 %
1"
#400
0"
#404
b110001 %
1"
#408
0"
#412
b110010 %
1"
#416
0"
#420
b110011 %
1"
#424
0"
#428
b0 v
b0 9"
0(
b110100 %
1"
0,"
0-
#429
1w
#430
0t
1q
#432
0"
#436
b11100 6
b11100 y
b11100 !"
b1000000000000000000000000000 9"
1>
b110101 %
1"
#437
1p
#440
0"
#444
b100000 6
b100000 y
b100000 !"
b1000000000000000000000000000 9"
0>
b110110 %
1"
#448
0"
#452
b1000000000000000000000000000 9"
b110111 %
1"
#453
b100000 !
b100000 )
b100000 5
b100000 z
b100000 }
#454
b100100 6
b100100 y
b100100 !"
b100100 ~
#455
b100000 6
b100000 y
b100000 !"
b1001 D
b1001 $"
1>
14
00
12
b101 |
b1001 g
b101 #"
b101 %"
b111000001010000010100001001 #
b111000001010000010100001001 &
b111000001010000010100001001 .
#456
b110100 ""
b100100 6
b100100 y
b100100 !"
b1000 D
b1000 $"
0>
b1000 3
b1000 u
0"
#457
b1000 a
b0 `
b0 _
b0 B
b0 E
b0 S
b0 V
b0 Y
b0 \
b0 b
b111000 ""
b0 :
b0 k
b0 '"
#458
b111 I
b111 [
#459
b111 G
b111 U
#460
b111000 %
1"
#461
b100100 !
b100100 )
b100100 5
b100100 z
b100100 }
b1000 5"
#462
b101000 6
b101000 y
b101000 !"
b101000 ~
#463
b100000000 _
b1000 a
b100000000000 `
b110 |
b110 #"
b110 %"
b0 &"
b100000 C
b100000 F
b100000 Q
b100000 T
b100000 W
b100000 Z
b100000 ]
b100000 c
b1000 B
b1000 E
b1000 S
b1000 V
b1000 Y
b1000 \
b1000 b
b100000000001100000011000001001 #
b100000000001100000011000001001 &
b100000000001100000011000001001 .
b1000 :
b1000 k
b1000 '"
#464
b100100 6
b100100 y
b100100 !"
1>
b0 n
b0 m
b1 o
b111100 ""
b100000 @
b100000 P
b100000 j
b101000 I
b101000 [
b100000 K
b100000 R
0"
#465
b1000 a
b0 `
b0 _
b0 B
b0 E
b0 S
b0 V
b0 Y
b0 \
b0 b
b1000000 ""
b1001 9
b1001 ("
b0 :
b0 k
b0 '"
b101000 6
b101000 y
b101000 !"
b1 D
b1 $"
0>
b1 3
b1 u
b101000 G
b101000 U
#466
b100000 I
b100000 [
1t
0q
#467
b100000 G
b100000 U
#468
1."
1-
b100 v
b100100000001 *
b100100000001 7
b100100000001 s
b100100000001 +"
b0 +
b0 ;
b0 r
b0 *"
1'
b111001 %
1"
#469
b101000 !
b101000 )
b101000 5
b101000 z
b101000 }
b1 6"
#470
b101100 6
b101100 y
b101100 !"
b101100 ~
#471
b101000 6
b101000 y
b101000 !"
b100000 D
b100000 $"
1>
04
10
02
b100000 _
b1000 a
b100000000 `
b100 |
b1011 g
b100 #"
b100 %"
b1 B
b1 E
b1 S
b1 V
b1 Y
b1 \
b1 b
b100000000001000000010000001011 #
b100000000001000000010000001011 &
b100000000001000000010000001011 .
b1 :
b1 k
b1 '"
#472
b1000100 ""
b100001 I
b100001 [
0"
#473
b1000 a
b100000000000 `
b100000000 _
b1000 B
b1000 E
b1000 S
b1000 V
b1000 Y
b1000 \
b1000 b
b111100 ""
b1000 :
b1000 k
b1000 '"
b100001 G
b100001 U
#474
b101000 I
b101000 [
#475
b101000 G
b101000 U
#476
b111010 %
1"
#480
0"
#484
b111011 %
1"
#488
0"
#492
b111100 %
1"
#496
0"
#500
b111101 %
1"
#504
0"
#508
b111110 %
1"
#512
0"
#516
b111111 %
1"
b1 @"
#520
0"
#524
b1000000 %
1"
#528
0"
#532
b1000001 %
1"
#536
0"
#540
b1000010 %
1"
#544
0"
#548
b1000011 %
1"
#552
0"
#556
b1000100 %
1"
b1001 A"
#560
0"
#564
b1000101 %
1"
#568
0"
#572
b1000110 %
1"
#576
0"
#580
b1000111 %
1"
#584
0"
#588
b1001000 %
1"
#592
0"
#596
b1001001 %
1"
b0 B"
#600
0"
#604
b1001010 %
1"
#608
0"
#612
b1001011 %
1"
#616
0"
#620
b1001100 %
1"
#624
0"
#628
b1001101 %
1"
#632
0"
#636
1,"
b11 v
b1000 +
b1000 ;
b1000 r
b1000 *"
1(
0'
b1001110 %
1"
0."
1-
b0 C"
#640
0"
#644
b1001111 %
1"
#648
0"
#652
b1010000 %
1"
#656
0"
#660
b1010001 %
1"
#664
0"
#668
b1010010 %
1"
#672
0"
#676
b1010011 %
1"
#680
0"
#684
b1010100 %
1"
#688
0"
#692
b1010101 %
1"
#696
0"
#700
b1010110 %
1"
#704
0"
#708
b1010111 %
1"
#712
0"
#716
b1011000 %
1"
#720
0"
#724
b1011001 %
1"
#728
0"
#732
b1011010 %
1"
#736
0"
#740
b1011011 %
1"
#744
0"
#748
b1011100 %
1"
#752
0"
#756
b1011101 %
1"
#760
0"
#764
b1011110 %
1"
#768
0"
#772
b1011111 %
1"
#776
0"
#780
b1100000 %
1"
#784
0"
#788
b1100001 %
1"
#792
0"
#796
b1100010 %
1"
#800
0"
#804
b0 v
b0 8"
0(
b1100011 %
1"
0,"
0-
#805
0p
#806
0t
1q
#808
0"
#812
b101000 6
b101000 y
b101000 !"
b1000 8"
1>
b1100100 %
1"
#813
1p
#816
0"
#820
b101100 6
b101100 y
b101100 !"
b1000 8"
0>
b1100101 %
1"
#824
0"
#828
b1000 8"
b1100110 %
1"
#829
b101100 !
b101100 )
b101100 5
b101100 z
b101100 }
#830
b110000 6
b110000 y
b110000 !"
b110000 ~
#831
b0x0000x D
b0x0000x $"
x>
b1000 a
b100000000000 `
b1001000 _
b1xxx00 6
b1xxx00 y
b1xxx00 !"
x4
x0
x2
x8
x1
x<
bx ?
bx i
bx {
b1001 C
b1001 F
b1001 Q
b1001 T
b1001 W
b1001 Z
b1001 ]
b1001 c
bx |
bx g
bx #"
bx %"
bx &"
bx #
bx &
bx .
#832
b0x00x000 J
b0x00x000 ^
b1000 a
b100000000000 `
b1001000 _
xN
xM
b0xxxxx00 6
b0xxxxx00 y
b0xxxxx00 !"
b0 n
b0 m
b0 o
bx A
bx O
bx h
b1000000 ""
b0x D
b0x $"
b0 @
b0 P
b0 j
b1000 L
b1000 X
b1001 I
b1001 [
b1001 K
b1001 R
0"
#833
b0 J
b0 ^
b1000 a
bx00000000 `
b0 _
bx 6
bx y
bx !"
bx C
bx F
bx Q
bx T
bx W
bx Z
bx ]
bx c
bx B
bx E
bx S
bx V
bx Y
bx \
bx b
bx ""
bx 9
bx ("
bx :
bx k
bx '"
1t
0q
b10001 G
b10001 U
#834
bx L
bx X
bx I
bx [
bx K
bx R
#835
x/
bx G
bx U
#836
b1100111 %
1"
#837
bx !
bx )
bx 5
bx z
bx }
#838
bx ~
#840
0"
#844
b1101000 %
1"
#848
0"
#852
b1101001 %
1"
#856
0"
#860
b1101010 %
1"
#864
0"
#868
b1101011 %
1"
#872
0"
#876
b1101100 %
1"
#880
0"
#884
b1101101 %
1"
#888
0"
#892
b1101110 %
1"
#896
0"
#900
b1101111 %
1"
#904
0"
#908
b1110000 %
1"
#912
0"
#916
b1110001 %
1"
#920
0"
#924
b1110010 %
1"
#928
0"
#932
b1110011 %
1"
#936
0"
#940
b1110100 %
1"
#944
0"
#948
b1110101 %
1"
#952
0"
#956
b1110110 %
1"
#960
0"
#964
b1110111 %
1"
#968
0"
#972
b1111000 %
1"
#976
0"
#980
b1111001 %
1"
#984
0"
#988
b1111010 %
1"
#992
0"
#996
b1111011 %
1"
#1000
0"
#1004
b1111100 %
1"
#1008
0"
#1012
b1111101 %
1"
#1016
0"
#1020
b1111110 %
1"
#1024
0"
#1028
1"
#1030
