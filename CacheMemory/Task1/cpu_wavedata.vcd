$date
	Wed Jun 25 08:50:19 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var reg 1 " CLK $end
$var reg 32 # INSTRUCTION [31:0] $end
$var reg 1 $ RESET $end
$var integer 32 % i [31:0] $end
$scope module mycpu $end
$var wire 1 " CLK $end
$var wire 32 & INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 1 ' ZERO_FLAG $end
$var wire 1 ( WRITE_DATA_MEM $end
$var wire 1 ) SIGN_CONTROL $end
$var wire 1 * REG_WRITE_ENABLE $end
$var wire 8 + READ_MEM_OUT [7:0] $end
$var wire 1 , READ_DATA_MEM $end
$var wire 32 - PC_OUT [31:0] $end
$var wire 32 . PC_IN [31:0] $end
$var wire 1 / OPERAND_CONTROL $end
$var wire 8 0 OPERAND2 [7:0] $end
$var wire 8 1 OPERAND1 [7:0] $end
$var wire 1 2 JUMP_CONTROL $end
$var wire 1 3 BUSYWAIT $end
$var wire 2 4 BRANCH_CONTROL [1:0] $end
$var wire 8 5 ALURESULT [7:0] $end
$var wire 3 6 ALUOP [2:0] $end
$var reg 8 7 ALU_IN_DATA1 [7:0] $end
$var reg 8 8 ALU_IN_DATA2 [7:0] $end
$var reg 8 9 REG_INDATA [7:0] $end
$scope module u_alu $end
$var wire 8 : DATA1 [7:0] $end
$var wire 8 ; DATA2 [7:0] $end
$var wire 8 < sum [7:0] $end
$var wire 8 = shiftOut [7:0] $end
$var wire 8 > orOut [7:0] $end
$var wire 8 ? mulOut [7:0] $end
$var wire 8 @ fwdOut [7:0] $end
$var wire 8 A andOut [7:0] $end
$var wire 1 B SHIFT_E $end
$var wire 1 C MUL_E $end
$var wire 3 D ALUOP [2:0] $end
$var reg 8 E RESULT [7:0] $end
$var reg 1 ' ZERO $end
$scope module u0 $end
$var wire 8 F DATA2 [7:0] $end
$var wire 8 G RESULT [7:0] $end
$upscope $end
$scope module u1 $end
$var wire 8 H DATA1 [7:0] $end
$var wire 8 I DATA2 [7:0] $end
$var wire 8 J RESULT [7:0] $end
$upscope $end
$scope module u3 $end
$var wire 8 K DATA1 [7:0] $end
$var wire 8 L DATA2 [7:0] $end
$var wire 8 M RESULT [7:0] $end
$upscope $end
$scope module u4 $end
$var wire 8 N DATA1 [7:0] $end
$var wire 8 O DATA2 [7:0] $end
$var wire 8 P RESULT [7:0] $end
$upscope $end
$scope module u5 $end
$var wire 8 Q DATA1 [7:0] $end
$var wire 8 R DATA2 [7:0] $end
$var wire 1 C ENABLE $end
$var reg 8 S RESULT [7:0] $end
$var reg 16 T temp1 [15:0] $end
$var reg 16 U temp2 [15:0] $end
$var integer 32 V i [31:0] $end
$upscope $end
$scope module u6 $end
$var wire 8 W DATA1 [7:0] $end
$var wire 8 X DATA2 [7:0] $end
$var wire 1 B ENABLE $end
$var reg 8 Y RESULT [7:0] $end
$var reg 1 Z sign $end
$var integer 32 [ i [31:0] $end
$upscope $end
$upscope $end
$scope module u_control $end
$var wire 8 \ OPCODE [7:0] $end
$var reg 3 ] ALUOP [2:0] $end
$var reg 2 ^ BRANCH_CONTROL [1:0] $end
$var reg 1 2 JUMP_CONTROL $end
$var reg 1 / OPERAND_CONTROL $end
$var reg 1 , READ_DATA_MEM $end
$var reg 1 ) SIGN_CONTROL $end
$var reg 1 ( WRITE_DATA_MEM $end
$var reg 1 * WRITE_ENABLE $end
$upscope $end
$scope module u_data_mem $end
$var wire 8 _ address [7:0] $end
$var wire 1 " clock $end
$var wire 1 , read $end
$var wire 1 $ reset $end
$var wire 1 ( write $end
$var wire 8 ` writedata [7:0] $end
$var reg 1 3 busywait $end
$var reg 1 a readaccess $end
$var reg 8 b readdata [7:0] $end
$var reg 1 c writeaccess $end
$var integer 32 d i [31:0] $end
$upscope $end
$scope module u_pc $end
$var wire 1 " CLK $end
$var wire 1 $ RESET $end
$var wire 32 e PC_IN [31:0] $end
$var reg 32 f PC_OUT [31:0] $end
$upscope $end
$scope module u_pcIn $end
$var wire 2 g BRANCH [1:0] $end
$var wire 8 h BRANCH_ADDRESS [7:0] $end
$var wire 1 3 BUSYWAIT $end
$var wire 1 2 JUMP $end
$var wire 32 i PC_IN [31:0] $end
$var wire 1 ' ZERO $end
$var reg 32 j PC [31:0] $end
$var reg 32 k PC_OUT [31:0] $end
$var reg 32 l offset [31:0] $end
$upscope $end
$scope module u_regfile $end
$var wire 1 " CLK $end
$var wire 3 m INADDRESS [2:0] $end
$var wire 8 n INDATA [7:0] $end
$var wire 3 o OUT1ADDRESS [2:0] $end
$var wire 3 p OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 * WRITE $end
$var reg 8 q OUT1DATA [7:0] $end
$var reg 8 r OUT2DATA [7:0] $end
$var integer 32 s counter [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_regfile $end
$var reg 8 t \reg_array[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_regfile $end
$var reg 8 u \reg_array[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_regfile $end
$var reg 8 v \reg_array[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_regfile $end
$var reg 8 w \reg_array[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_regfile $end
$var reg 8 x \reg_array[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_regfile $end
$var reg 8 y \reg_array[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_regfile $end
$var reg 8 z \reg_array[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_regfile $end
$var reg 8 { \reg_array[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_data_mem $end
$var reg 8 | \memory_array[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_data_mem $end
$var reg 8 } \memory_array[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_data_mem $end
$var reg 8 ~ \memory_array[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_data_mem $end
$var reg 8 !" \memory_array[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_data_mem $end
$var reg 8 "" \memory_array[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_data_mem $end
$var reg 8 #" \memory_array[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_data_mem $end
$var reg 8 $" \memory_array[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_data_mem $end
$var reg 8 %" \memory_array[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_data_mem $end
$var reg 8 &" \memory_array[8] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module u_data_mem $end
$var reg 8 '" \memory_array[9] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
b100000000 d
0c
bx b
0a
bx `
b0 _
bx ^
bx ]
bx \
bx [
xZ
b0 Y
bx X
bx W
b1000 V
bx00000000 U
b0 T
b0 S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
b0 E
bx D
xC
xB
bx A
bx @
b0 ?
bx >
b0 =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
b0 5
bx 4
03
x2
bx 1
bx 0
x/
bx .
bx -
x,
bx +
x*
x)
x(
x'
bx &
b1010 %
1$
bx #
0"
bx !
$end
#1
b0 !
b0 -
b0 f
b0 i
#2
b100 j
#3
bx ?
bx S
bx T
b1000 V
bx00000000 U
b0 9
b0 n
b111 8
b111 ;
b111 F
b111 I
b111 L
b111 O
b111 R
b111 X
b100 .
b100 e
b100 k
0,
0(
1*
1/
0)
02
b0 4
b0 ^
b0 g
b1 h
b0 \
b1 m
b0 o
b111 p
b111000000000000000100000000 #
b111000000000000000100000000 &
#4
b0 ?
b0 S
b1000 V
bx00000000 U
bx T
b111 9
b111 n
0C
0B
b111 5
b111 E
b111 _
b0 6
b0 D
b0 ]
b1000 s
b0xxx A
b0xxx M
bx111 >
bx111 P
b111 @
b111 G
1"
#5
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b1000 l
#7
b1000 V
b0 U
b0 T
b0 7
b0 :
b0 H
b0 K
b0 N
b0 Q
b0 W
b0 0
b0 r
b0 1
b0 `
b0 q
#8
b0 A
b0 M
b111 >
b111 P
0"
#9
0'
b111 <
b111 J
#10
0$
#12
1"
#13
b111 u
b100 !
b100 -
b100 f
b100 i
#14
b1000 .
b1000 e
b1000 k
b1000 j
#15
b1000 V
b1000 8
b1000 ;
b1000 F
b1000 I
b1000 L
b1000 O
b1000 R
b1000 X
b10 h
b10 m
b0 p
b1000000000000000001000000000 #
b1000000000000000001000000000 &
#16
b1100 l
b1000 9
b1000 n
b1000 5
b1000 E
b1000 _
b1000 >
b1000 P
b1000 @
b1000 G
0"
#17
b10000 l
b1000 <
b1000 J
#20
1"
b1 %
#21
b1000 v
b1000 !
b1000 -
b1000 f
b1000 i
#22
b1100 .
b1100 e
b1100 k
b1100 j
#23
b1000 V
b101 8
b101 ;
b101 F
b101 I
b101 L
b101 O
b101 R
b101 X
b11 h
b11 m
b101 p
b101000000000000001100000000 #
b101000000000000001100000000 &
#24
b10100 l
b101 9
b101 n
b101 5
b101 E
b101 _
b101 >
b101 P
b101 @
b101 G
0"
#25
b11000 l
b101 <
b101 J
#28
b10 %
1"
#29
b101 w
b1100 !
b1100 -
b1100 f
b1100 i
#30
b10000 .
b10000 e
b10000 k
b10000 j
#31
b1100 .
b1100 e
b1100 k
1c
13
b1000 V
1(
0*
b100 8
b100 ;
b100 F
b100 I
b100 L
b100 O
b100 R
b100 X
b0 h
b1001 \
b0 m
b10 o
b100 p
b100000000100000000000001001 #
b100000000100000000000001001 &
#32
b11100 l
b100 9
b100 n
b100 5
b100 E
b100 _
b100 >
b100 P
b100 @
b100 G
0"
#33
b100000 T
b1000 V
b100000000000 U
b1000 7
b1000 :
b1000 H
b1000 K
b1000 N
b1000 Q
b1000 W
b10000 l
b1000 1
b1000 `
b1000 q
b100 <
b100 J
#34
b1100 >
b1100 P
#35
b1100 <
b1100 J
#36
b11 %
1"
#40
0"
#44
b100 %
1"
#48
0"
#52
b101 %
1"
#56
0"
#60
b110 %
1"
#64
0"
#68
b111 %
1"
#72
0"
#76
b1000 %
b10000 .
b10000 e
b10000 k
1"
0c
03
b1000 ""
#77
b10000 !
b10000 -
b10000 f
b10000 i
#78
b10100 .
b10100 e
b10100 k
b10100 j
#79
b10000 .
b10000 e
b10000 k
bx 9
bx n
1a
13
1,
0(
1*
b1 h
b1011 \
b1 m
b0 o
b100000000000000000100001011 #
b100000000000000000100001011 &
#80
b10100 l
0"
#81
b1000 V
b0 U
b0 T
b0 7
b0 :
b0 H
b0 K
b0 N
b0 Q
b0 W
b11000 l
b0 1
b0 `
b0 q
#82
b100 >
b100 P
#83
b100 <
b100 J
#84
b1001 %
1"
#85
bx u
#88
0"
#92
b1010 %
1"
#93
bx u
#96
0"
#100
b1011 %
1"
#101
bx u
#104
0"
#108
b1100 %
1"
#109
bx u
#112
0"
#116
b1101 %
1"
#117
bx u
#120
0"
#124
b1110 %
b10100 .
b10100 e
b10100 k
b1000 9
b1000 n
1"
0a
03
b1000 +
b1000 b
#125
b1000 u
b10100 !
b10100 -
b10100 f
b10100 i
#126
b11000 .
b11000 e
b11000 k
b11000 j
#127
b100 9
b100 n
b1000 V
0,
b1010 8
b1010 ;
b1010 F
b1010 I
b1010 L
b1010 O
b1010 R
b1010 X
b0 \
b10 p
b1010000000000000000100000000 #
b1010000000000000000100000000 &
#128
b11100 l
b1010 9
b1010 n
b1010 5
b1010 E
b1010 _
b1010 >
b1010 P
b1010 @
b1010 G
0"
#129
b1000 0
b1000 r
b1010 <
b1010 J
#132
b1111 %
1"
#133
b1010 u
b11000 !
b11000 -
b11000 f
b11000 i
#134
b11100 .
b11100 e
b11100 k
b11100 j
#135
b11000 .
b11000 e
b11000 k
1c
13
b1000 V
1(
0*
0/
b1000 8
b1000 ;
b1000 F
b1000 I
b1000 L
b1000 O
b1000 R
b1000 X
b0 h
b1000 \
b0 m
b1 o
b11 p
b11000000010000000000001000 #
b11000000010000000000001000 &
#136
b100000 l
b1000 9
b1000 n
b1000 5
b1000 E
b1000 _
b1000 >
b1000 P
b1000 @
b1000 G
0"
#137
b110010 T
b1000 V
b101000000000 U
b101 8
b101 ;
b101 F
b101 I
b101 L
b101 O
b101 R
b101 X
b1010 7
b1010 :
b1010 H
b1010 K
b1010 N
b1010 Q
b1010 W
b11100 l
b101 0
b101 r
b1010 1
b1010 `
b1010 q
b1000 <
b1000 J
#138
b101 9
b101 n
b101 5
b101 E
b101 _
b1111 >
b1111 P
b101 @
b101 G
#139
b1111 <
b1111 J
#140
b10000 %
1"
#144
0"
#148
b10001 %
1"
#152
0"
#156
b10010 %
1"
#160
0"
#164
b10011 %
1"
#168
0"
#172
b10100 %
1"
#176
0"
#180
b10101 %
b11100 .
b11100 e
b11100 k
1"
0c
03
b1010 #"
#181
b11100 !
b11100 -
b11100 f
b11100 i
#182
b100000 .
b100000 e
b100000 k
b100000 j
#183
b11100 .
b11100 e
b11100 k
b1000 9
b1000 n
1a
13
1,
0(
1*
b10 h
b1010 \
b10 m
b0 o
b11000000000000001000001010 #
b11000000000000001000001010 &
#184
b100000 l
0"
#185
b1000 V
b0 U
b0 T
b0 7
b0 :
b0 H
b0 K
b0 N
b0 Q
b0 W
b101000 l
b0 1
b0 `
b0 q
#186
b101 >
b101 P
#187
b101 <
b101 J
#188
b10110 %
1"
#189
b1000 v
#192
0"
#196
b10111 %
1"
#197
b1000 v
#200
0"
#204
b11000 %
1"
#205
b1000 v
#208
0"
#212
b11001 %
1"
#213
b1000 v
#216
0"
#220
b11010 %
1"
#221
b1000 v
#224
0"
#228
b11011 %
b100000 .
b100000 e
b100000 k
b1010 9
b1010 n
1"
0a
03
b1010 +
b1010 b
#229
b1010 v
b100000 !
b100000 -
b100000 f
b100000 i
#230
b100100 .
b100100 e
b100100 k
b100100 j
#231
b0xxxx 9
b0xxxx n
xc
xa
x3
b10xx00 .
b10xx00 e
b10xx00 k
x,
x(
x*
x/
x)
x2
bx 4
bx ^
bx g
bx h
bx \
bx m
bx o
bx p
bx #
bx &
#232
b1000 V
b0x0x0 9
b0x0x0 n
xC
xB
b0 5
b0 E
b0 _
bx 6
bx D
bx ]
b101100 l
0"
#233
b1000 V
bx00000000 U
bx .
bx e
bx k
bx 8
bx ;
bx F
bx I
bx L
bx O
bx R
bx X
bx 7
bx :
bx H
bx K
bx N
bx Q
bx W
bx l
bx 0
bx r
bx 1
bx `
bx q
#234
bx A
bx M
bx >
bx P
bx @
bx G
#235
x'
bx <
bx J
#236
b11100 %
1"
#237
bx !
bx -
bx f
bx i
#238
bx j
#240
0"
#244
b11101 %
1"
#248
0"
#252
b11110 %
1"
#256
0"
#260
1"
#262
